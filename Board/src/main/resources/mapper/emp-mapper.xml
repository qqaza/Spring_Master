<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.emp.mapper.EmpMapper">
	<sql id="condition">
	<where>
                    	<if test="vo.departmentId != null">
                    	department_id=#{departmentId}
                    	</if>
                    	<if test="vo.firstName != null">
                    AND first_name = #{firstName}
                    </if>
                    <if test="vo.managerId != null">
                    AND manager_id = #{managerId}
                    </if>
                    <if test="svo.employeeIds != null">
                    	AND employee_id
                     <foreach collection="svo.employeeIds"
                     		  item="empid"
                              open="in ("
                              close=")" 
                     		  separator=",">
                     	#{empid}
                     
                     </foreach>
                    </if>
                    </where>	
	
	</sql>
	
	<resultMap type="EmpVO" id="empResultMap">
		<id property="employeeId" column="EMPLOYEE_ID" />
		<result property="firstName" column="FIRST_NAME" />
		<result property="phone" column="PHONE_NUMBER" />
	</resultMap>
	<select id="getEmpList" resultMap="empResultMap">
	SELECT * FROM ( SELECT rownum rn, a.* FROM (
	
		SELECT rownum id, e.*
		  FROM employees e
	  <include refid="condition"></include>
	  ORDER BY employee_id DESC		
	  
	) a WHERE rownum <![CDATA[<=]]> #{svo.end} ) b WHERE rn >= #{svo.start}
	</select>
                    
<![CDATA[  
 )a WHERE ROWNUM <= #{svo.end} ) b WHERE rn >= #{svo.start}
 ]]>
	</select>
	
	<select id="getEmpInfo" parameterType="int" resultType="EmpVO">
		SELECT *
		FROM employees
		WHERE employee_id = #{employeeId}
	</select>
	
	<insert id="insertEmp" 
	        parameterType="EmpVO">
		<selectKey keyProperty="employeeId"
		           order="BEFORE"
		           resultType="int">
			SELECT employees_seq.nextval 
			  FROM dual
		</selectKey>
		INSERT INTO employees
			(
			  employee_id
			, first_name
			, last_name
			, email
			, phone_number
			, hire_date
			, job_id
			<if test="salary != null">
			, salary
			</if>
			, commission_pct
			, manager_id
			, department_id
			, photo
			)
		VALUES
			(
			  #{employeeId}
			, #{firstName}
			, #{lastName}
			, #{email}
			, #{phoneNumber}
			, #{hireDate}
			, #{jobId}
			<if test="salary != null">
			, #{salary}
			</if>
			, #{commissionPct}
			, #{managerId}
			, #{departmentId}
			, #{photo}
			)
	</insert>
	
	<delete id="deleteEmp">
		DELETE FROM employees
		WHERE employee_id = #{employeeId}
	</delete>
	
	<<select id="getStat" resultType="map">
		SELECT e.department_id "id"
			 , d.department_name "name"
			 , count(*) "cnt"
		  FROM employees e 
		  JOIN departments d
	 	    ON e.department_id = d.department_id
	     WHERE e.department_id IS NOT NULL
	  GROUP BY e.department_id, d.department_name
	</select>
</mapper>